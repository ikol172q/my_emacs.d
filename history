;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(irony--server-install-command-history swiper-history ido-buffer-history magit-revision-history ido-file-history file-name-history xref--read-identifier-history ivy-history read-expression-history minibuffer-history buffer-name-history extended-command-history shell-command-history evil-ex-history))
(setq irony--server-install-command-history '("cmake -DCMAKE_INSTALL_PREFIX\\=/Users/ghding/.emacs.d/irony/ /Users/ghding/.emacs.d/elpa/irony-20170627.1045/server && cmake --build . --use-stderr --config Release --target install"))
(setq ido-buffer-history '("*SPEEDBAR*" "*magit: my_emacs.d" "init.el • my_emacs.d"))
(setq magit-revision-history '("origin/master" "origin/HEAD"))
(setq ido-file-history '("."))
(setq file-name-history '("~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/GTAGS" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/GRTAGS" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/GPATH" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.cpp" "~/Dropbox/TACourse/2016fall/HW5/test_HW5/MovieTree.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/ServiceBase.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/01_HelloWorld.h" "/usr/include/sys/cdefs.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/01_HelloWorld.cpp" "~/.emacs.d/elpa/company-rtags-20170522.2154/company-rtags-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/init.el" "~/.emacs.d/elpa/clang-format-20170120.137/clang-format-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/flycheck-rtags-20170522.2154/flycheck-rtags-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/init.el" "~/.emacs.d/elpa/auto-complete-c-headers-20150911.2023/auto-complete-c-headers-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/auto-complete-clang-20140409.52/auto-complete-clang-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/01_HelloWorld.cpp" "~/.emacs.d/init.el" "~/.emacs.d/elpa/cmake-ide-20170626.509/cmake-ide-autoloads.el" "~/.emacs.d/elpa/levenshtein-20090830.340/levenshtein-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/lisp/afternoon-theme.el" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.cpp" "~/.emacs.d/lisp/afternoon-theme.el" "~/Desktop/test.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.cpp" "~/.emacs.d/elpa/ggtags-20170510.744/ggtags-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/flycheck-irony-20160317.1536/flycheck-irony-autoloads.el" "~/.emacs.d/elpa/flycheck-20170707.920/flycheck-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Desktop/test.cpp" "~/.emacs.d/elpa/company-irony-c-headers-20151018.209/company-irony-c-headers-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/company-irony-20170612.1308/company-irony-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/irony-20170627.1045/irony-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Desktop/test.cpp" "~/.emacs.d/init.el" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.cpp" "~/.emacs.d/init.el" "~/.emacs.d/elpa/rtags-20170710.214/rtags-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/VehicleStateListenerService.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.cpp" "~/.emacs.d/lisp/afternoon-theme.el" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/MonitorDB.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/MonitorBase.h" "~/.emacs.d/lisp/afternoon-theme.el" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/01_HelloWorld.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/01_HelloWorld.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/VehicleStateListenerService.h" "~/Desktop/UxAS_pulls/OpenAMASE/OpenAMASE/src/Amase/avtas/amase/entity/modules/WaypointFollower.java" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/ServiceBase.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/KeepOutZoneMonitor.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/KeepOutZoneMonitor.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/MonitorBase.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/MonitorBase.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/MonitorDB.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/VehicleStateListenerService.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/MonitorDB.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/VehicleStateListenerService.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/AutonomyMonitorServiceMain.cpp" "~/.emacs.d/lisp/afternoon-theme.el" "~/.emacs.d/lisp/xemacs-theme.el" "~/.emacs.d/lisp/afternoon-theme.el" "~/.emacs.d/lisp/weyland-yutani-theme.el" "~/.emacs.d/init.el" "~/.emacs.d/lisp/init-color-theme.el" "~/.emacs.d/lisp/init-elpa.el" "~/my_emacs.d/init.el" "~/Downloads/visual-fill-column-20170502.1300.el" "~/.emacs.d/lisp/init-elpa.el" "~/.emacs.d/init.el" "~/my_emacs.d/init.el" "~/my_emacs.d/" "~/my_emacs.d/init.el" "~/my_emacs.d/README.md" "~/.emacs.d/" "~/.emacs.d/lisp/init-elpa.el" "~/.emacs.d/elpa/magit-20170709.1106/magit-autoloads.el" "~/.emacs.d/elpa/git-commit-20170609.2310/git-commit-autoloads.el" "~/.emacs.d/elpa/with-editor-20170707.1401/with-editor-autoloads.el" "~/.emacs.d/elpa/magit-popup-20170709.510/magit-popup-autoloads.el" "~/.emacs.d/elpa/async-20170610.2241/async-autoloads.el" "~/.emacs.d/elpa/dash-20170613.151/dash-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/OneDrive - University of Colorado at Boulder Office 365/Documents/GitHubBitbucket/DataMining/Titanic_ML_from_Disaster/src/Titanic_ML_from_Disaster-Guohui’s MacBook Pro.ipynb" "~/.emacs.d/elpa/helm-20170708.1207/helm-autoloads.el" "~/.emacs.d/elpa/helm-core-20170701.629/helm-core-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/lisp/init-multiple-cursors.el" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/00_ServiceTemplate.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/00_ServiceTemplate.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/00_ServiceList.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/DPSS/Dpss.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/DPSS/DpssDataTypes.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/DPSS/DpssApi.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/DPSS/Dpss.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/DPSS/DRand.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/DPSS/DRand.cpp" "~/Desktop/virtualenvfolder/pip-selfcheck.json" "~/Desktop/test.md" "~/Untitled.ipynb" "~/Desktop/test.md" "~/Untitled.ipynb" "~/.emacs.d/elpa/tabbar-20160524.1401/tabbar-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Downloads/ob-ipython.el" "~/.emacs.d/elpa/s-buffer-20130605.1424/s-buffer-autoloads.el" "~/.emacs.d/elpa/noflet-20141102.654/noflet-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Downloads/dash.el" "~/.emacs.d/lisp/init-elpa.el" "~/.emacs.d/elpa/eww-lnum-20150102.712/eww-lnum-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Desktop/test.md" "~/.emacs.d/elpa/impatient-mode-20170505.1921/impatient-mode-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/markdown-preview-mode-20161211.1443/markdown-preview-mode-autoloads.el" "~/.emacs.d/elpa/web-server-20140905.1706/web-server-autoloads.el" "~/.emacs.d/elpa/uuidgen-20140918.1601/uuidgen-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/markdown-mode+-20170320.1404/markdown-mode+-autoloads.el" "~/.emacs.d/elpa/markdown-mode-20170707.1030/markdown-mode-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Untitled.ipynb" "~/Untitled1.ipynb" "~/Desktop/test" "~/.emacs.d/init.el" "~/.emacs.d/elpa/ein-20170630.1941/ein-autoloads.el" "~/.emacs.d/elpa/websocket-20170610.2117/websocket-autoloads.el" "~/.emacs.d/elpa/auto-complete-20170124.1845/auto-complete-autoloads.el" "~/.emacs.d/elpa/deferred-20170531.2135/deferred-autoloads.el" "~/.emacs.d/elpa/skewer-mode-20170122.938/skewer-mode-autoloads.el" "~/.emacs.d/elpa/request-20170131.1747/request-autoloads.el" "~/Desktop/UxAS_pulls/OpenUxAS/examples/02_Example_WaterwaySearch/runUxAS_WaterwaySearch.sh" "~/Desktop/UxAS_pulls/OpenUxAS/examples/02_Example_WaterwaySearch/README.md" "~/Desktop/UxAS_pulls/OpenUxAS/examples/02_Example_WaterwaySearch/Scenario_WaterwaySearch.xml" "~/Desktop/UxAS_pulls/OpenUxAS/examples/02_Example_WaterwaySearch/runHeadless.sh" "~/Desktop/UxAS_pulls/OpenUxAS/examples/02_Example_WaterwaySearch/runAMASE_WaterwaySearch.sh" "~/Desktop/virtualenvfolder/bin/pip3.5" "~/.emacs.d/elpa/rainbow-mode-0.13/rainbow-mode-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/lisp/init-color-theme.el" "~/.emacs.d/custom-set-variables.el" "~/.emacs.d/elpa/request-0.2.0/request-pkg.el" "~/.emacs.d/custom-set-variables.el" "~/" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/VehicleStateListenerService.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/VehicleStateListenerService.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/LMCP/afrl/cmasi/FollowPathCommand.h" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AssignmentTreeBranchBoundBase.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/00_ServiceTemplate.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutomationRequestValidatorService.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AssignmentTreeBranchBoundBase.cpp" "~/Desktop/UxAS_pulls/OpenUxAS/get-pip.py" "~/Desktop/UxAS_pulls/OpenUxAS/src/Services/AutonomyMonitors/VehicleStateListenerService.cpp" "~/.emacs.d/elpa/projectile-0.14.0/projectile-autoloads.el" "~/.emacs.d/elpa/pkg-info-0.6/pkg-info-autoloads.el" "~/.emacs.d/elpa/epl-0.8/epl-autoloads.el" "~/.emacs.d/custom-set-variables.el" "~/Desktop/UxAS_pulls/OpenUxAS/examples/02_Example_WaterwaySearch_Modified_Wind/Scenario_WaterwaySearch.xml" "~/Desktop/UxAS_pulls/OpenUxAS/examples/02_Example_WaterwaySearch_Modified_Wind/runAMASE_WaterwaySearch.sh" "~/.emacs.d/init.el" "~/Google Drive/Course/Course2016Fall/CSCI5352_Network_Analysis_and_Modeling/PS2/code/my.py" "~/Google Drive/Course/Course2016Fall/CSCI5352_Network_Analysis_and_Modeling/PS1/code/ps1.py" "~/Google Drive/Course/Course2016Fall/CSCI5352_Network_Analysis_and_Modeling/PS1/code/mnd.py" "~/Google Drive/Course/Course2016Fall/CSCI5352_Network_Analysis_and_Modeling/PS1/code/my.py" "~/Documents/MATLAB/SDN/test03.m" "~/Documents/MATLAB/SDN/test02.m" "~/Documents/MATLAB/SDN/test01.m" "~/Documents/MATLAB/2017SummerRA/Dubins/Dubins.m" "~/.emacs.d/lisp/speedbar-extension.el" "~/Google Drive/MasterPaper/L 1 范数支持向量机在代谢组学中的应用.pdf" "~/.emacs.d/elpa/sr-speedbar-20140914.2339/sr-speedbar.el" "/Applications/Emacs.app/Contents/Resources/lisp/simple.el.gz" "~/Google Drive/Course/Course2016Fall/CSCI_5622_Machine_Learning/PS2/code/tests.py" "~/.emacs.d/lisp/init-elpa.el" "~/.emacs.d/elpa/request-deferred-0.3.0/request-deferred-autoloads.el" "~/.emacs.d/elpa/deferred-0.5.1/deferred-autoloads.el" "~/.emacs.d/lisp/init-python-mode.el" "~/Google Drive/Course/Course2016Fall/CSCI_5622_Machine_Learning/PS2/code/plotfile.py" "~/Documents/" "~/.emacs.d/lisp/init-gui-frames.el" "~/OneDrive - University of Colorado at Boulder Office 365/Documents/GitHubBitbucket/DataMining/HousePrices_AdvancedRegressionTechniques/README.md" "~/OneDrive - University of Colorado at Boulder Office 365/Documents/GitHubBitbucket/DataMining/HousePrices_AdvancedRegressionTechniques/House_Prices_Advanced_Regression_Techniques.ipynb"))
(setq xref--read-identifier-history '("d"))
(setq ivy-history '("test.cpp" "01_HelloWorld.cpp:24 #include \"UxAS_TimerManager.h\"" "01_HelloWorld.cpp" "01_HelloWorld.h" "*Messages*" "afternoon-theme.el" "*eshell*" "*scratch*" "*SPEEDBAR*" "*helm-mode-ein:notebooklist-login*" "*ein:notebooklist http://127.0.0.1:8888*" "*magit-diff: my_emacs.d" "*magit: my_emacs.d" "init.el" #("me" 0 2 (ivy-index 0)) "*Compile-Log*" "*magit-process: my_emacs.d" "*helm-mode-package-install*" "*shell*" "*Completions*" #("scratch*" 0 8 (ivy-index 0)) #("Messages*" 0 9 (ivy-index 0)) #("shell*" 0 6 (ivy-index 0)) "test.md" "*ein: http://127.0.0.1:8888/Untitled.ipynb*" #("mess" 0 4 (ivy-index 0)) #("*" 0 1 (ivy-index 0)) #("she" 0 3 (ivy-index 1)) "*ein:log-all*" "*Shell Command Output*" "*terminal*" "*ein: http://127.0.0.1:8888/Titanic_ML_from_Disaster.ipynb*" "*ein: http://127.0.0.1:8888/Titanic_ML_from_Disaster-Guohui’s MacBook Pro.ipynb*" "jupyter notebook" #("ein" 0 3 (ivy-index 0)) "*ein: http://127.0.0.1:8888/Untitled.ipynb*<2>" #("ein:log-all*" 0 12 (ivy-index 0)) #("Compile-Log*" 0 12 (ivy-index 0)) #("Me" 0 2 (ivy-index 0)) #("terminal*" 0 9 (ivy-index 0)) "*Help*" #("Scenario_WaterwaySearch.xml" 0 27 (ivy-index 0)) #("runAMASE_WaterwaySearch.sh" 0 26 (ivy-index 0)) #("runHeadless.sh" 0 14 (ivy-index 0)) #("run" 0 3 (ivy-index 0)) #("C" 0 1 (ivy-index 0)) #("eshell" 0 6 (ivy-index 0)) "test01.m" "Dubins.m" "*Ibuffer*"))
(setq read-expression-history '("wq"))
(setq minibuffer-history '("/Users/ghding/Desktop/UxAS_pulls/OpenUxAS/src/Services/" "company-rtags" "clang-f" "flycheck-rta" "auto-comple" "auto-complete" "cmake" "ggt" "irony" "company-irony" "company-ycmd" "ycmd" "rtags" "8888" "ju p" "" "/Users/ghding/OneDrive - University of Colorado at Boulder Office 365/Documents/GitHubBitbucket/" "/Users/ghding/OneDrive - University of Colorado at Boulder Office 365/Documents/" "/Users/ghding/" "*.*" "*" "/Users/ghding/.em" "/Users/ghding/my" "/bin/bash" "README.md" "magit" "jupy " "G" "helm" "tabbar" "s-buffer" "eww-lnum" "impatient-mode" "markdown-preview-mode" "markdown-mode+" "np.random" "install" "8889" "8888/?token=745299ba50f09ed3b46baab65dded0a0b81f773b3e33798b" "?token=745299ba50f09ed3b46baab65dded0a0b81f773b3e33798b" "ein" "rainbow-mode" "/bin/bashsdf" "db" "src/Services/AutomationRequestValidatorService.cpp" "get-pip.py" "projectile" "request-deferred" "evil-args" "evil"))
(setq buffer-name-history '("AutonomyMonitorServiceMain.h" "*Packages*" "*eshell*" "test.cpp" "ServiceBase.h" "VehicleStateListenerService.h" "WaypointFollower.java" "init-elpa.el" "*helm-mode-ein:notebooklist-open*" "*ein:log-all*" "*helm-mode-ein:notebooklist-login*" "*helm-mode-ein:notebooklist-open*" "*shell*" "*ein:notebooklist http://127.0.0.1:8888*" "*ein: http://127.0.0.1:8888/Untitled.ipynb*" "plotfile.py" "*SPEEDBAR*" "*magit: my_emacs.d" "*ein: http://127.0.0.1:8888/Titanic_ML_from_Disaster.ipynb*" "*helm-mode-ein:notebooklist-login*" "*ein: http://127.0.0.1:8888/Titanic_ML_from_Disaster.ipynb*" "init.el • my_emacs.d" "visual-fill-column-20170502.1300.el" "init-elpa.el" "README.md" "*magit-diff: my_emacs.d" "README.md.~master^~" "README.md.~master~" "init-elpa.el" "*helm-mode-kill-buffer*" "*helm-mode-package-install*" "dash-autoloads.el" "*markdown-output*" "Titanic_ML_from_Disaster-Guohui’s MacBook Pro.ipynb" "00_ServiceTemplate.h" "DRand.cpp" "Dpss.cpp" "DpssApi.cpp" "00_ServiceTemplate.cpp" "DpssDataTypes.cpp" "Untitled.ipynb" "*markdown-output*" "test.md" "eww-lnum-autoloads.el" "Untitled1.ipynb" "*ein: http://127.0.0.1:8888/Untitled1.ipynb*" "*Messages*" "*Compile-Log*" "*terminal*" "*ein: http://127.0.0.1:8888/Titanic_ML_from_Disaster-Guohui’s MacBook Pro.ipynb*" "*ein: http://127.0.0.1:8888/Untitled.ipynb*<2>" "*ansi-term*" "*Colors*" "*Customize Group: Speedbar*" "test01.m" "L 1 范数支持向量机在代谢组学中的应用.pdf"))
(setq extended-command-history '(#("in" 0 2 (ivy-index 1)) #("install" 0 7 (ivy-index 0)) "irony-mode" #("irony-in" 0 8 (ivy-index 0)) #("irony" 0 5 (ivy-index 1)) #("inst" 0 4 (ivy-index 0)) #("package-" 0 8 (ivy-index 12)) #("eshell" 0 6 (ivy-index 0)) #("company-c-headers " 0 18 (ivy-index 0)) #("irony-v" 0 7 (ivy-index 0)) #("ins" 0 3 (ivy-index 0)) #("insta" 0 5 (ivy-index 0)) "rtags-mode" #("rtags-di" 0 8 (ivy-index 0)) #("rta" 0 3 (ivy-index 0)) "speedbar-refresh" #("ref" 0 3 (ivy-index 1)) #("instal" 0 6 (ivy-index 0)) #("refre" 0 5 (ivy-index 1)) #("shell" 0 5 (ivy-index 1)) #("e" 0 1 (ivy-index 0)) "ein:notebooklist-open" #("ein" 0 3 (ivy-index 1)) #("spee" 0 4 (ivy-index 4)) "magit-status" #("mag" 0 3 (ivy-index 0)) #("ein:" 0 4 (ivy-index 0)) #("ma" 0 2 (ivy-index 0)) #("eshe" 0 4 (ivy-index 0)) #("term" 0 4 (ivy-index 1)) "speedbar" #("sp" 0 2 (ivy-index 0)) #("magit" 0 5 (ivy-index 0)) #("magit-stat" 0 10 (ivy-index 0)) #("color-the" 0 9 (ivy-index 6)) #("speedbar-mode" 0 13 (ivy-index 0)) #("speed" 0 5 (ivy-index 0)) "tabbar-mode" #("tabbar" 0 6 (ivy-index 0)) #("refresh" 0 7 (ivy-index 0)) #("python-mode" 0 11 (ivy-index 0)) #("markdown-preview-" 0 17 (ivy-index 1)) #("markdown" 0 8 (ivy-index 1)) #("markdown-prev" 0 13 (ivy-index 1)) #("live" 0 4 (ivy-index 1)) #("ein:note" 0 8 (ivy-index 1)) #("bash" 0 4 (ivy-index 0)) #("ein:byte-compile-ein" 0 20 (ivy-index 0)) #("ein:i" 0 5 (ivy-index 0)) #("package-menu" 0 12 (ivy-index 2)) #("package-m" 0 9 (ivy-index 0)) #("ei" 0 2 (ivy-index 0)) #("list" 0 4 (ivy-index 0)) #("refres" 0 6 (ivy-index 0)) #("an" 0 2 (ivy-index 0)) #("1" 0 1 (ivy-index 0)) #("ter" 0 3 (ivy-index 1)) #("rain" 0 4 (ivy-index 0)) #("list-colors" 0 11 (ivy-index 0)) #("ans" 0 3 (ivy-index 0)) #("pa" 0 2 (ivy-index 0)) #("pac" 0 3 (ivy-index 1)) #("pack" 0 4 (ivy-index 2)) #("gnu" 0 3 (ivy-index 0)) #("li" 0 2 (ivy-index 0)) #("package" 0 7 (ivy-index 2)) #("dired" 0 5 (ivy-index 0)) #("she" 0 3 (ivy-index 0)) #("eval-buffer" 0 11 (ivy-index 0)) "projectile-mode" #("projectile" 0 10 (ivy-index 4)) #("projectile-discover-projects-in-directory" 0 41 (ivy-index 0)) #("b" 0 1 (ivy-index 0)) #("buff" 0 4 (ivy-index 0)) "
shell
speedbar
package-install
rgrep
org-mode
package-refresh-contents
refill-mode
cd
5x5" #("cedet" 0 5 (ivy-index 0)) #("s" 0 1 (ivy-index 0)) #("packa" 0 5 (ivy-index 0)) #("rgrep" 0 5 (ivy-index 0))))
(setq shell-command-history '("python"))
(setq evil-ex-history '(#("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1))))
(setq search-ring '("flycheck" "company" "rtags" "rta" "paren" "Deep" "std" "sriram" "speedbar" "spee" "Dar" "ein" "helm" "40" "48" "160"))
(setq regexp-search-ring 'nil)
(setq kill-ring '("http://syamajala.github.io/c-ide.html" "(add-hook 'after-init-hook 'global-company-mode)" "(eval-after-load 'flycheck
  '(add-hook 'flycheck-mode-hook #'flycheck-irony-setup))" "(defun my-flycheck-rtags-setup ()
  (flycheck-select-checker 'rtags)
  (setq-local flycheck-highlighting-mode nil) ;; RTags creates more accurate overlays.
  (setq-local flycheck-check-syntax-automatically nil))
;; c-mode-common-hook is also called by c++-mode
(add-hook 'c-mode-common-hook #'my-flycheck-rtags-setup)" "(require 'flycheck-rtags)" #(";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;" 0 69 (fontified t face font-lock-comment-delimiter-face) 69 70 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face)) "Header file completion with " "(add-hook 'c++-mode-hook 'flycheck-mode)
(add-hook 'c-mode-hook 'flycheck-mode)" "Header file completion" #(";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;" 0 69 (fontified t face font-lock-comment-delimiter-face) 69 70 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face)) "Source code completion using Irony" #(";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;" 0 70 (fontified t face font-lock-comment-delimiter-face)) #(";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;" 0 70 (fontified t face font-lock-comment-delimiter-face)) "http://syamajala.github.io/c-ide.html" "(require 'company-irony-c-headers)
(eval-after-load 'company
  '(add-to-list
    'company-backends '(company-irony-c-headers company-irony)))" "(eval-after-load 'company
  '(add-to-list
    'company-backends 'company-irony))" "(setq company-idle-delay 0)
(define-key c-mode-map [(tab)] 'company-complete)
(define-key c++-mode-map [(tab)] 'company-complete)" "(add-hook 'irony-mode-hook 'company-irony-setup-begin-commands)
(setq company-backends (delete 'company-semantic company-backends))
(eval-after-load 'company
  '(add-to-list
    'company-backends 'company-irony))" "(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)
(add-hook 'objc-mode-hook 'irony-mode)

(defun my-irony-mode-hook ()
  (define-key irony-mode-map [remap completion-at-point]
    'irony-completion-at-point-async)
  (define-key irony-mode-map [remap complete-symbol]
    'irony-completion-at-point-async))

(add-hook 'irony-mode-hook 'my-irony-mode-hook)
(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)" "(setq rtags-completions-enabled t)
(eval-after-load 'company
  '(add-to-list
    'company-backends 'company-rtags))
(setq rtags-autostart-diagnostics t)
(rtags-enable-standard-keybindings)" #("(add-hook 'c-mode-common-hook
          (lambda ()
            (when (derived-mode-p 'c-mode 'c++-mode 'java-mode 'asm-mode)
              (ggtags-mode 1))))



" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 30 (fontified t) 30 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-3-face) fontified t) 49 50 (face (rainbow-delimiters-depth-3-face) fontified t) 50 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-3-face) fontified t) 64 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-4-face) fontified t) 70 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-4-face) fontified t) 124 125 (fontified t) 125 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-4-face) fontified t) 140 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-4-face) fontified t) 154 155 (face (rainbow-delimiters-depth-3-face) fontified t) 155 156 (face (rainbow-delimiters-depth-2-face) fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 158 (fontified t) 158 160 (fontified t) 160 161 (fontified t)) #("(add-hook 'c-mode-common-hook
          (lambda ()
            (when (derived-mode-p 'c-mode 'c++-mode 'java-mode 'asm-mode)
              (ggtags-mode 1))))



" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 30 (fontified t) 30 40 (fontified t) 40 41 (face (rainbow-delimiters-depth-2-face) fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 48 (fontified t) 48 49 (face (rainbow-delimiters-depth-3-face) fontified t) 49 50 (face (rainbow-delimiters-depth-3-face) fontified t) 50 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-3-face) fontified t) 64 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-4-face) fontified t) 70 123 (fontified t) 123 124 (face (rainbow-delimiters-depth-4-face) fontified t) 124 125 (fontified t) 125 139 (fontified t) 139 140 (face (rainbow-delimiters-depth-4-face) fontified t) 140 153 (fontified t) 153 154 (face (rainbow-delimiters-depth-4-face) fontified t) 154 155 (face (rainbow-delimiters-depth-3-face) fontified t) 155 156 (face (rainbow-delimiters-depth-2-face) fontified t) 156 157 (face (rainbow-delimiters-depth-1-face) fontified t) 157 158 (fontified t) 158 160 (fontified t) 160 161 (fontified t)) #("
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; rtags setting
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq rtags-autostart-diagnostics t)

(setq rtags-completions-enabled t)

(global-company-mode)

(defun my-flycheck-rtags-setup ()
  (flycheck-select-checker 'rtags)
  (setq-local flycheck-highlighting-mode nil) ;; RTags creates more accurate overlays.
  (setq-local flycheck-check-syntax-automatically nil))
(add-hook 'c-mode-hook #'my-flycheck-rtags-setup)
(add-hook 'c++-mode-hook #'my-flycheck-rtags-setup)
(add-hook 'objc-mode-hook #'my-flycheck-rtags-setup)

" 0 1 (fontified t) 1 48 (face font-lock-comment-delimiter-face fontified t) 48 71 (face font-lock-comment-delimiter-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 75 (face font-lock-comment-delimiter-face fontified t) 75 89 (face font-lock-comment-face fontified t) 89 159 (face font-lock-comment-delimiter-face fontified t) 159 160 (face font-lock-comment-face fontified t) 160 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-1-face) fontified t) 162 166 (face font-lock-keyword-face fontified t) 166 196 (fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (face (rainbow-delimiters-depth-1-face) fontified t) 200 204 (face font-lock-keyword-face fontified t) 204 232 (fontified t) 232 233 (face (rainbow-delimiters-depth-1-face) fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (face (rainbow-delimiters-depth-1-face) fontified t) 236 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-1-face) fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (face (rainbow-delimiters-depth-1-face) fontified t) 259 264 (face font-lock-keyword-face fontified t) 264 265 (fontified t) 265 288 (face font-lock-function-name-face fontified t) 288 289 (fontified t) 289 290 (face (rainbow-delimiters-depth-2-face) fontified t) 290 291 (face (rainbow-delimiters-depth-2-face) fontified t) 291 292 (fontified t) 292 294 (fontified t) 294 295 (face (rainbow-delimiters-depth-2-face) fontified t) 295 325 (fontified t) 325 326 (face (rainbow-delimiters-depth-2-face) fontified t) 326 329 (fontified t) 329 330 (face (rainbow-delimiters-depth-2-face) fontified t) 330 340 (face font-lock-keyword-face fontified t) 340 371 (fontified t) 371 372 (face (rainbow-delimiters-depth-2-face) fontified t) 372 373 (fontified t) 373 376 (face font-lock-comment-delimiter-face fontified t) 376 414 (face font-lock-comment-face fontified t) 414 416 (fontified t) 416 417 (face (rainbow-delimiters-depth-2-face) fontified t) 417 427 (face font-lock-keyword-face fontified t) 427 467 (fontified t) 467 468 (face (rainbow-delimiters-depth-2-face) fontified t) 468 469 (face (rainbow-delimiters-depth-1-face) fontified t) 469 470 (fontified t) 470 471 (face (rainbow-delimiters-depth-1-face) fontified t) 471 518 (fontified t) 518 519 (face (rainbow-delimiters-depth-1-face) fontified t) 519 520 (fontified t) 520 521 (face (rainbow-delimiters-depth-1-face) fontified t) 521 570 (fontified t) 570 571 (face (rainbow-delimiters-depth-1-face) fontified t) 571 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-1-face) fontified t) 573 623 (fontified t) 623 624 (face (rainbow-delimiters-depth-1-face) fontified t) 624 625 (fontified t) 625 626 (fontified t)) #("
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; rtags setting
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq rtags-autostart-diagnostics t)

(setq rtags-completions-enabled t)

(global-company-mode)

(defun my-flycheck-rtags-setup ()
  (flycheck-select-checker 'rtags)
  (setq-local flycheck-highlighting-mode nil) ;; RTags creates more accurate overlays.
  (setq-local flycheck-check-syntax-automatically nil))
(add-hook 'c-mode-hook #'my-flycheck-rtags-setup)
(add-hook 'c++-mode-hook #'my-flycheck-rtags-setup)
(add-hook 'objc-mode-hook #'my-flycheck-rtags-setup)

" 0 1 (fontified t) 1 48 (face font-lock-comment-delimiter-face fontified t) 48 71 (face font-lock-comment-delimiter-face fontified t) 71 72 (face font-lock-comment-face fontified t) 72 75 (face font-lock-comment-delimiter-face fontified t) 75 89 (face font-lock-comment-face fontified t) 89 159 (face font-lock-comment-delimiter-face fontified t) 159 160 (face font-lock-comment-face fontified t) 160 161 (fontified t) 161 162 (face (rainbow-delimiters-depth-1-face) fontified t) 162 166 (face font-lock-keyword-face fontified t) 166 196 (fontified t) 196 197 (face (rainbow-delimiters-depth-1-face) fontified t) 197 198 (fontified t) 198 199 (fontified t) 199 200 (face (rainbow-delimiters-depth-1-face) fontified t) 200 204 (face font-lock-keyword-face fontified t) 204 232 (fontified t) 232 233 (face (rainbow-delimiters-depth-1-face) fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 236 (face (rainbow-delimiters-depth-1-face) fontified t) 236 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-1-face) fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 259 (face (rainbow-delimiters-depth-1-face) fontified t) 259 264 (face font-lock-keyword-face fontified t) 264 265 (fontified t) 265 288 (face font-lock-function-name-face fontified t) 288 289 (fontified t) 289 290 (face (rainbow-delimiters-depth-2-face) fontified t) 290 291 (face (rainbow-delimiters-depth-2-face) fontified t) 291 292 (fontified t) 292 294 (fontified t) 294 295 (face (rainbow-delimiters-depth-2-face) fontified t) 295 325 (fontified t) 325 326 (face (rainbow-delimiters-depth-2-face) fontified t) 326 329 (fontified t) 329 330 (face (rainbow-delimiters-depth-2-face) fontified t) 330 340 (face font-lock-keyword-face fontified t) 340 371 (fontified t) 371 372 (face (rainbow-delimiters-depth-2-face) fontified t) 372 373 (fontified t) 373 376 (face font-lock-comment-delimiter-face fontified t) 376 414 (face font-lock-comment-face fontified t) 414 416 (fontified t) 416 417 (face (rainbow-delimiters-depth-2-face) fontified t) 417 427 (face font-lock-keyword-face fontified t) 427 467 (fontified t) 467 468 (face (rainbow-delimiters-depth-2-face) fontified t) 468 469 (face (rainbow-delimiters-depth-1-face) fontified t) 469 470 (fontified t) 470 471 (face (rainbow-delimiters-depth-1-face) fontified t) 471 518 (fontified t) 518 519 (face (rainbow-delimiters-depth-1-face) fontified t) 519 520 (fontified t) 520 521 (face (rainbow-delimiters-depth-1-face) fontified t) 521 570 (fontified t) 570 571 (face (rainbow-delimiters-depth-1-face) fontified t) 571 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-1-face) fontified t) 573 623 (fontified t) 623 624 (face (rainbow-delimiters-depth-1-face) fontified t) 624 625 (fontified t) 625 626 (fontified t)) #("
(add-hook 'irony-mode-hook 'my-irony-mode-hook)
(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)

;; company-irony setup, c-header completions
(add-hook 'irony-mode-hook 'company-irony-setup-begin-commands)
;; Remove company-semantic because it has higher precedance than company-clang
;; Using RTags completion is also faster than semantic, it seems. Semantic
;; also provides a bunch of technically irrelevant completions sometimes.
;; All in all, RTags just seems to do a better job.
(setq company-backends (delete 'company-semantic company-backends))
;; Enable company-irony and several other useful auto-completion modes
;; We don't use rtags since we've found that for large projects this can cause
;; async timeouts. company-semantic (after company-clang!) works quite well
;; but some knowledge some knowledge of when best to trigger is still necessary.
(eval-after-load 'company
  '(add-to-list
    'company-backends '(company-irony-c-headers
                        company-irony company-yasnippet
                        company-clang company-rtags)
    )
  )

(defun my-disable-semantic ()
  \"Disable the company-semantic backend.\"
  (interactive)
  (setq company-backends (delete '(company-irony-c-headers
                                   company-irony company-yasnippet
                                   company-clang company-rtags
                                   company-semantic) company-backends))
  (add-to-list
   'company-backends '(company-irony-c-headers
                       company-irony company-yasnippet
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-1-face) fontified t) 48 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 112 (fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 115 (fontified t) 115 118 (face font-lock-comment-delimiter-face fontified t) 118 160 (face font-lock-comment-face fontified t) 160 161 (face (rainbow-delimiters-depth-1-face) fontified t) 161 222 (fontified t) 222 223 (face (rainbow-delimiters-depth-1-face) fontified t) 223 224 (fontified t) 224 227 (face font-lock-comment-delimiter-face fontified t) 227 242 (face font-lock-comment-face fontified t) 242 303 (face font-lock-comment-face fontified t) 303 306 (face font-lock-comment-delimiter-face fontified t) 306 378 (face font-lock-comment-face fontified t) 378 381 (face font-lock-comment-delimiter-face fontified t) 381 452 (face font-lock-comment-face fontified t) 452 455 (face font-lock-comment-delimiter-face fontified t) 455 504 (face font-lock-comment-face fontified t) 504 505 (face (rainbow-delimiters-depth-1-face) fontified t) 505 509 (face font-lock-keyword-face fontified t) 509 527 (fontified t) 527 528 (face (rainbow-delimiters-depth-2-face) fontified t) 528 549 (fontified t) 549 569 (fontified t) 569 570 (fontified t face (rainbow-delimiters-depth-2-face)) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 572 (fontified t) 572 575 (face font-lock-comment-delimiter-face fontified t) 575 643 (face font-lock-comment-face fontified t) 643 646 (face font-lock-comment-delimiter-face fontified t) 646 722 (face font-lock-comment-face fontified t) 722 725 (face font-lock-comment-delimiter-face fontified t) 725 798 (face font-lock-comment-face fontified t) 798 801 (face font-lock-comment-delimiter-face fontified t) 801 803 (face font-lock-comment-face fontified t) 803 879 (face font-lock-comment-face fontified t) 879 880 (face (rainbow-delimiters-depth-1-face) fontified t) 880 905 (fontified t) 905 908 (fontified t) 908 909 (face (rainbow-delimiters-depth-2-face) fontified t) 909 921 (fontified t) 921 944 (fontified t) 944 945 (face (rainbow-delimiters-depth-3-face) fontified t) 945 1025 (fontified t) 1025 1072 (fontified t) 1072 1076 (fontified t) 1076 1077 (fontified t face (rainbow-delimiters-depth-3-face)) 1077 1078 (fontified t) 1078 1082 (fontified t) 1082 1083 (face (rainbow-delimiters-depth-2-face) fontified t) 1083 1086 (fontified t) 1086 1087 (face (rainbow-delimiters-depth-1-face) fontified t) 1087 1088 (fontified t) 1088 1089 (fontified t) 1089 1090 (face (rainbow-delimiters-depth-1-face) fontified t) 1090 1095 (face font-lock-keyword-face fontified t) 1095 1096 (fontified t) 1096 1115 (face font-lock-function-name-face fontified t) 1115 1116 (fontified t) 1116 1117 (face (rainbow-delimiters-depth-2-face) fontified t) 1117 1118 (face (rainbow-delimiters-depth-2-face) fontified t) 1118 1121 (fontified t) 1121 1160 (face font-lock-doc-face fontified t) 1160 1161 (fontified t) 1161 1163 (fontified t) 1163 1164 (face (rainbow-delimiters-depth-2-face) fontified t) 1164 1175 (face font-lock-keyword-face fontified t) 1175 1176 (face (rainbow-delimiters-depth-2-face) fontified t) 1176 1177 (fontified t) 1177 1179 (fontified t) 1179 1180 (face (rainbow-delimiters-depth-2-face) fontified t) 1180 1184 (face font-lock-keyword-face fontified t) 1184 1202 (fontified t) 1202 1203 (face (rainbow-delimiters-depth-3-face) fontified t) 1203 1211 (fontified t) 1211 1212 (face (rainbow-delimiters-depth-4-face) fontified t) 1212 1379 (fontified t) 1379 1417 (fontified t) 1417 1418 (face (rainbow-delimiters-depth-4-face) fontified t) 1418 1419 (fontified t) 1419 1435 (face font-lock-warning-face help-echo "Hidden behind deeper element; move to another line?" fontified t) 1435 1436 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 1436 1437 (face (rainbow-delimiters-depth-2-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 1437 1438 (fontified t) 1438 1440 (fontified t) 1440 1441 (face (rainbow-delimiters-depth-2-face) fontified t) 1441 1475 (fontified t) 1475 1476 (face (rainbow-delimiters-depth-3-face) fontified t) 1476 1555 (fontified t)) #("
(add-hook 'irony-mode-hook 'my-irony-mode-hook)
(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)

;; company-irony setup, c-header completions
(add-hook 'irony-mode-hook 'company-irony-setup-begin-commands)
;; Remove company-semantic because it has higher precedance than company-clang
;; Using RTags completion is also faster than semantic, it seems. Semantic
;; also provides a bunch of technically irrelevant completions sometimes.
;; All in all, RTags just seems to do a better job.
(setq company-backends (delete 'company-semantic company-backends))
;; Enable company-irony and several other useful auto-completion modes
;; We don't use rtags since we've found that for large projects this can cause
;; async timeouts. company-semantic (after company-clang!) works quite well
;; but some knowledge some knowledge of when best to trigger is still necessary.
(eval-after-load 'company
  '(add-to-list
    'company-backends '(company-irony-c-headers
                        company-irony company-yasnippet
                        company-clang company-rtags)
    )
  )

(defun my-disable-semantic ()
  \"Disable the company-semantic backend.\"
  (interactive)
  (setq company-backends (delete '(company-irony-c-headers
                                   company-irony company-yasnippet
                                   company-clang company-rtags
                                   company-semantic) company-backends))
  (add-to-list
   'company-backends '(company-irony-c-headers
                       company-irony company-yasnippet
" 0 1 (fontified t) 1 2 (face (rainbow-delimiters-depth-1-face) fontified t) 2 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-1-face) fontified t) 48 49 (fontified t) 49 50 (face (rainbow-delimiters-depth-1-face) fontified t) 50 112 (fontified t) 112 113 (face (rainbow-delimiters-depth-1-face) fontified t) 113 115 (fontified t) 115 118 (face font-lock-comment-delimiter-face fontified t) 118 160 (face font-lock-comment-face fontified t) 160 161 (face (rainbow-delimiters-depth-1-face) fontified t) 161 222 (fontified t) 222 223 (face (rainbow-delimiters-depth-1-face) fontified t) 223 224 (fontified t) 224 227 (face font-lock-comment-delimiter-face fontified t) 227 242 (face font-lock-comment-face fontified t) 242 303 (face font-lock-comment-face fontified t) 303 306 (face font-lock-comment-delimiter-face fontified t) 306 378 (face font-lock-comment-face fontified t) 378 381 (face font-lock-comment-delimiter-face fontified t) 381 452 (face font-lock-comment-face fontified t) 452 455 (face font-lock-comment-delimiter-face fontified t) 455 504 (face font-lock-comment-face fontified t) 504 505 (face (rainbow-delimiters-depth-1-face) fontified t) 505 509 (face font-lock-keyword-face fontified t) 509 527 (fontified t) 527 528 (face (rainbow-delimiters-depth-2-face) fontified t) 528 549 (fontified t) 549 569 (fontified t) 569 570 (fontified t face (rainbow-delimiters-depth-2-face)) 570 571 (fontified t face (rainbow-delimiters-depth-1-face)) 571 572 (fontified t) 572 575 (face font-lock-comment-delimiter-face fontified t) 575 643 (face font-lock-comment-face fontified t) 643 646 (face font-lock-comment-delimiter-face fontified t) 646 722 (face font-lock-comment-face fontified t) 722 725 (face font-lock-comment-delimiter-face fontified t) 725 798 (face font-lock-comment-face fontified t) 798 801 (face font-lock-comment-delimiter-face fontified t) 801 803 (face font-lock-comment-face fontified t) 803 879 (face font-lock-comment-face fontified t) 879 880 (face (rainbow-delimiters-depth-1-face) fontified t) 880 905 (fontified t) 905 908 (fontified t) 908 909 (face (rainbow-delimiters-depth-2-face) fontified t) 909 921 (fontified t) 921 944 (fontified t) 944 945 (face (rainbow-delimiters-depth-3-face) fontified t) 945 1025 (fontified t) 1025 1072 (fontified t) 1072 1076 (fontified t) 1076 1077 (fontified t face (rainbow-delimiters-depth-3-face)) 1077 1078 (fontified t) 1078 1082 (fontified t) 1082 1083 (face (rainbow-delimiters-depth-2-face) fontified t) 1083 1086 (fontified t) 1086 1087 (face (rainbow-delimiters-depth-1-face) fontified t) 1087 1088 (fontified t) 1088 1089 (fontified t) 1089 1090 (face (rainbow-delimiters-depth-1-face) fontified t) 1090 1095 (face font-lock-keyword-face fontified t) 1095 1096 (fontified t) 1096 1115 (face font-lock-function-name-face fontified t) 1115 1116 (fontified t) 1116 1117 (face (rainbow-delimiters-depth-2-face) fontified t) 1117 1118 (face (rainbow-delimiters-depth-2-face) fontified t) 1118 1121 (fontified t) 1121 1160 (face font-lock-doc-face fontified t) 1160 1161 (fontified t) 1161 1163 (fontified t) 1163 1164 (face (rainbow-delimiters-depth-2-face) fontified t) 1164 1175 (face font-lock-keyword-face fontified t) 1175 1176 (face (rainbow-delimiters-depth-2-face) fontified t) 1176 1177 (fontified t) 1177 1179 (fontified t) 1179 1180 (face (rainbow-delimiters-depth-2-face) fontified t) 1180 1184 (face font-lock-keyword-face fontified t) 1184 1202 (fontified t) 1202 1203 (face (rainbow-delimiters-depth-3-face) fontified t) 1203 1211 (fontified t) 1211 1212 (face (rainbow-delimiters-depth-4-face) fontified t) 1212 1379 (fontified t) 1379 1417 (fontified t) 1417 1418 (face (rainbow-delimiters-depth-4-face) fontified t) 1418 1419 (fontified t) 1419 1435 (face font-lock-warning-face help-echo "Hidden behind deeper element; move to another line?" fontified t) 1435 1436 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 1436 1437 (face (rainbow-delimiters-depth-2-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 1437 1438 (fontified t) 1438 1440 (fontified t) 1440 1441 (face (rainbow-delimiters-depth-2-face) fontified t) 1441 1475 (fontified t) 1475 1476 (face (rainbow-delimiters-depth-3-face) fontified t) 1476 1555 (fontified t)) #("                       company-clang company-rtags))
  )
(defun my-enable-semantic ()
  \"Enable the company-semantic backend.\"
  (interactive)
  (setq company-backends (delete '(company-irony-c-headers
                                   company-irony company-yasnippet
                                   company-clang) company-backends))
  (add-to-list
   'company-backends '(company-irony-c-headers
                       company-irony company-yasnippet company-clang))
  )

;; Zero delay when pressing tab
(setq company-idle-delay 0)
(define-key c-mode-map [(tab)] 'company-complete)
(define-key c++-mode-map [(tab)] 'company-complete)
;; Delay when idle because I want to be able to think
(setq company-idle-delay 0)

;; Prohibit semantic from searching through system headers. We want
;; company-clang to do that for us.
(setq-mode-local c-mode semanticdb-find-default-throttle
                 '(local project unloaded recursive))
(setq-mode-local c++-mode semanticdb-find-default-throttle
                 '(local project unloaded recursive))

(semantic-remove-system-include \"/usr/include/\" 'c++-mode)
(semantic-remove-system-include \"/usr/local/include/\" 'c++-mode)
(add-hook 'semantic-init-hooks
          'semantic-reset-system-include)

" 0 23 (fontified t) 23 50 (fontified t) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 52 (fontified t face (rainbow-delimiters-depth-2-face)) 52 53 (fontified t) 53 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 63 (face font-lock-keyword-face fontified t) 63 64 (fontified t) 64 82 (face font-lock-function-name-face fontified t) 82 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-2-face) fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 88 (fontified t) 88 122 (face font-lock-doc-face fontified t) 122 126 (face font-lock-doc-face fontified t) 126 127 (fontified t) 127 129 (fontified t) 129 130 (face (rainbow-delimiters-depth-2-face) fontified t) 130 141 (face font-lock-keyword-face fontified t) 141 142 (face (rainbow-delimiters-depth-2-face) fontified t) 142 145 (fontified t) 145 146 (face (rainbow-delimiters-depth-2-face) fontified t) 146 150 (face font-lock-keyword-face fontified t) 150 168 (fontified t) 168 169 (face (rainbow-delimiters-depth-3-face) fontified t) 169 177 (fontified t) 177 178 (face (rainbow-delimiters-depth-4-face) fontified t) 178 317 (fontified t) 317 318 (face (rainbow-delimiters-depth-4-face) fontified t) 318 319 (fontified t) 319 335 (face font-lock-warning-face help-echo "Hidden behind deeper element; move to another line?" fontified t) 335 336 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 336 337 (face (rainbow-delimiters-depth-2-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 337 340 (fontified t) 340 341 (face (rainbow-delimiters-depth-2-face) fontified t) 341 375 (fontified t) 375 376 (face (rainbow-delimiters-depth-3-face) fontified t) 376 383 (fontified t) 383 400 (fontified t) 400 468 (fontified t) 468 469 (face (rainbow-delimiters-depth-3-face) fontified t) 469 470 (face (rainbow-delimiters-depth-2-face) fontified t) 470 473 (fontified t) 473 474 (face (rainbow-delimiters-depth-1-face) fontified t) 474 476 (fontified t) 476 479 (face font-lock-comment-delimiter-face fontified t) 479 508 (face font-lock-comment-face fontified t) 508 509 (face (rainbow-delimiters-depth-1-face) fontified t) 509 513 (face font-lock-keyword-face fontified t) 513 534 (fontified t) 534 535 (face (rainbow-delimiters-depth-1-face) fontified t) 535 536 (fontified t) 536 537 (face (rainbow-delimiters-depth-1-face) fontified t) 537 553 (fontified t) 553 559 (fontified t) 559 560 (fontified t face (rainbow-delimiters-depth-2-face)) 560 561 (fontified t face (rainbow-delimiters-depth-3-face)) 561 564 (fontified t) 564 565 (fontified t face (rainbow-delimiters-depth-3-face)) 565 566 (fontified t face (rainbow-delimiters-depth-2-face)) 566 584 (fontified t) 584 585 (fontified t face (rainbow-delimiters-depth-1-face)) 585 586 (fontified t) 586 587 (face (rainbow-delimiters-depth-1-face) fontified t) 587 611 (fontified t) 611 612 (face (rainbow-delimiters-depth-2-face) fontified t) 612 613 (face (rainbow-delimiters-depth-3-face) fontified t) 613 616 (fontified t) 616 617 (face (rainbow-delimiters-depth-3-face) fontified t) 617 618 (face (rainbow-delimiters-depth-2-face) fontified t) 618 627 (fontified t) 627 636 (fontified t) 636 637 (face (rainbow-delimiters-depth-1-face) fontified t) 637 638 (fontified t) 638 641 (face font-lock-comment-delimiter-face fontified t) 641 692 (face font-lock-comment-face fontified t) 692 693 (face (rainbow-delimiters-depth-1-face) fontified t) 693 697 (face font-lock-keyword-face fontified t) 697 718 (fontified t) 718 719 (face (rainbow-delimiters-depth-1-face) fontified t) 719 720 (fontified t) 720 721 (fontified t) 721 724 (face font-lock-comment-delimiter-face fontified t) 724 789 (face font-lock-comment-face fontified t) 789 792 (face font-lock-comment-delimiter-face fontified t) 792 825 (face font-lock-comment-face fontified t) 825 826 (face (rainbow-delimiters-depth-1-face) fontified t) 826 841 (face font-lock-keyword-face fontified t) 841 898 (fontified t) 898 900 (fontified t) 900 901 (face (rainbow-delimiters-depth-2-face) fontified t) 901 933 (fontified t) 933 934 (face (rainbow-delimiters-depth-2-face) fontified t) 934 935 (face (rainbow-delimiters-depth-1-face) fontified t) 935 936 (fontified t) 936 937 (face (rainbow-delimiters-depth-1-face) fontified t) 937 952 (face font-lock-keyword-face fontified t) 952 1013 (fontified t) 1013 1014 (face (rainbow-delimiters-depth-2-face) fontified t) 1014 1046 (fontified t) 1046 1047 (face (rainbow-delimiters-depth-2-face) fontified t) 1047 1048 (face (rainbow-delimiters-depth-1-face) fontified t) 1048 1050 (fontified t) 1050 1051 (face (rainbow-delimiters-depth-1-face) fontified t) 1051 1082 (fontified t) 1082 1086 (face font-lock-string-face fontified t) 1086 1097 (fontified t face font-lock-string-face) 1097 1107 (fontified t) 1107 1108 (fontified t face (rainbow-delimiters-depth-1-face)) 1108 1109 (fontified t) 1109 1110 (face (rainbow-delimiters-depth-1-face) fontified t) 1110 1136 (fontified t) 1136 1138 (fontified t) 1138 1141 (fontified t) 1141 1162 (face font-lock-string-face fontified t) 1162 1172 (fontified t) 1172 1173 (face (rainbow-delimiters-depth-1-face) fontified t) 1173 1174 (fontified t) 1174 1175 (face (rainbow-delimiters-depth-1-face) fontified t) 1175 1220 (fontified t) 1220 1245 (fontified t) 1245 1246 (face (rainbow-delimiters-depth-1-face) fontified t) 1246 1247 (fontified t) 1247 1248 (fontified t)) #("                       company-clang company-rtags))
  )
(defun my-enable-semantic ()
  \"Enable the company-semantic backend.\"
  (interactive)
  (setq company-backends (delete '(company-irony-c-headers
                                   company-irony company-yasnippet
                                   company-clang) company-backends))
  (add-to-list
   'company-backends '(company-irony-c-headers
                       company-irony company-yasnippet company-clang))
  )

;; Zero delay when pressing tab
(setq company-idle-delay 0)
(define-key c-mode-map [(tab)] 'company-complete)
(define-key c++-mode-map [(tab)] 'company-complete)
;; Delay when idle because I want to be able to think
(setq company-idle-delay 0)

;; Prohibit semantic from searching through system headers. We want
;; company-clang to do that for us.
(setq-mode-local c-mode semanticdb-find-default-throttle
                 '(local project unloaded recursive))
(setq-mode-local c++-mode semanticdb-find-default-throttle
                 '(local project unloaded recursive))

(semantic-remove-system-include \"/usr/include/\" 'c++-mode)
(semantic-remove-system-include \"/usr/local/include/\" 'c++-mode)
(add-hook 'semantic-init-hooks
          'semantic-reset-system-include)

" 0 23 (fontified t) 23 50 (fontified t) 50 51 (fontified t face (rainbow-delimiters-depth-3-face)) 51 52 (fontified t face (rainbow-delimiters-depth-2-face)) 52 53 (fontified t) 53 55 (fontified t) 55 56 (face (rainbow-delimiters-depth-1-face) fontified t) 56 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-1-face) fontified t) 58 63 (face font-lock-keyword-face fontified t) 63 64 (fontified t) 64 82 (face font-lock-function-name-face fontified t) 82 83 (fontified t) 83 84 (face (rainbow-delimiters-depth-2-face) fontified t) 84 85 (face (rainbow-delimiters-depth-2-face) fontified t) 85 88 (fontified t) 88 122 (face font-lock-doc-face fontified t) 122 126 (face font-lock-doc-face fontified t) 126 127 (fontified t) 127 129 (fontified t) 129 130 (face (rainbow-delimiters-depth-2-face) fontified t) 130 141 (face font-lock-keyword-face fontified t) 141 142 (face (rainbow-delimiters-depth-2-face) fontified t) 142 145 (fontified t) 145 146 (face (rainbow-delimiters-depth-2-face) fontified t) 146 150 (face font-lock-keyword-face fontified t) 150 168 (fontified t) 168 169 (face (rainbow-delimiters-depth-3-face) fontified t) 169 177 (fontified t) 177 178 (face (rainbow-delimiters-depth-4-face) fontified t) 178 317 (fontified t) 317 318 (face (rainbow-delimiters-depth-4-face) fontified t) 318 319 (fontified t) 319 335 (face font-lock-warning-face help-echo "Hidden behind deeper element; move to another line?" fontified t) 335 336 (face (rainbow-delimiters-depth-3-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 336 337 (face (rainbow-delimiters-depth-2-face font-lock-warning-face) help-echo "Hidden behind deeper element; move to another line?" fontified t) 337 340 (fontified t) 340 341 (face (rainbow-delimiters-depth-2-face) fontified t) 341 375 (fontified t) 375 376 (face (rainbow-delimiters-depth-3-face) fontified t) 376 383 (fontified t) 383 400 (fontified t) 400 468 (fontified t) 468 469 (face (rainbow-delimiters-depth-3-face) fontified t) 469 470 (face (rainbow-delimiters-depth-2-face) fontified t) 470 473 (fontified t) 473 474 (face (rainbow-delimiters-depth-1-face) fontified t) 474 476 (fontified t) 476 479 (face font-lock-comment-delimiter-face fontified t) 479 508 (face font-lock-comment-face fontified t) 508 509 (face (rainbow-delimiters-depth-1-face) fontified t) 509 513 (face font-lock-keyword-face fontified t) 513 534 (fontified t) 534 535 (face (rainbow-delimiters-depth-1-face) fontified t) 535 536 (fontified t) 536 537 (face (rainbow-delimiters-depth-1-face) fontified t) 537 553 (fontified t) 553 559 (fontified t) 559 560 (fontified t face (rainbow-delimiters-depth-2-face)) 560 561 (fontified t face (rainbow-delimiters-depth-3-face)) 561 564 (fontified t) 564 565 (fontified t face (rainbow-delimiters-depth-3-face)) 565 566 (fontified t face (rainbow-delimiters-depth-2-face)) 566 584 (fontified t) 584 585 (fontified t face (rainbow-delimiters-depth-1-face)) 585 586 (fontified t) 586 587 (face (rainbow-delimiters-depth-1-face) fontified t) 587 611 (fontified t) 611 612 (face (rainbow-delimiters-depth-2-face) fontified t) 612 613 (face (rainbow-delimiters-depth-3-face) fontified t) 613 616 (fontified t) 616 617 (face (rainbow-delimiters-depth-3-face) fontified t) 617 618 (face (rainbow-delimiters-depth-2-face) fontified t) 618 627 (fontified t) 627 636 (fontified t) 636 637 (face (rainbow-delimiters-depth-1-face) fontified t) 637 638 (fontified t) 638 641 (face font-lock-comment-delimiter-face fontified t) 641 692 (face font-lock-comment-face fontified t) 692 693 (face (rainbow-delimiters-depth-1-face) fontified t) 693 697 (face font-lock-keyword-face fontified t) 697 718 (fontified t) 718 719 (face (rainbow-delimiters-depth-1-face) fontified t) 719 720 (fontified t) 720 721 (fontified t) 721 724 (face font-lock-comment-delimiter-face fontified t) 724 789 (face font-lock-comment-face fontified t) 789 792 (face font-lock-comment-delimiter-face fontified t) 792 825 (face font-lock-comment-face fontified t) 825 826 (face (rainbow-delimiters-depth-1-face) fontified t) 826 841 (face font-lock-keyword-face fontified t) 841 898 (fontified t) 898 900 (fontified t) 900 901 (face (rainbow-delimiters-depth-2-face) fontified t) 901 933 (fontified t) 933 934 (face (rainbow-delimiters-depth-2-face) fontified t) 934 935 (face (rainbow-delimiters-depth-1-face) fontified t) 935 936 (fontified t) 936 937 (face (rainbow-delimiters-depth-1-face) fontified t) 937 952 (face font-lock-keyword-face fontified t) 952 1013 (fontified t) 1013 1014 (face (rainbow-delimiters-depth-2-face) fontified t) 1014 1046 (fontified t) 1046 1047 (face (rainbow-delimiters-depth-2-face) fontified t) 1047 1048 (face (rainbow-delimiters-depth-1-face) fontified t) 1048 1050 (fontified t) 1050 1051 (face (rainbow-delimiters-depth-1-face) fontified t) 1051 1082 (fontified t) 1082 1086 (face font-lock-string-face fontified t) 1086 1097 (fontified t face font-lock-string-face) 1097 1107 (fontified t) 1107 1108 (fontified t face (rainbow-delimiters-depth-1-face)) 1108 1109 (fontified t) 1109 1110 (face (rainbow-delimiters-depth-1-face) fontified t) 1110 1136 (fontified t) 1136 1138 (fontified t) 1138 1141 (fontified t) 1141 1162 (face font-lock-string-face fontified t) 1162 1172 (fontified t) 1172 1173 (face (rainbow-delimiters-depth-1-face) fontified t) 1173 1174 (fontified t) 1174 1175 (face (rainbow-delimiters-depth-1-face) fontified t) 1175 1220 (fontified t) 1220 1245 (fontified t) 1245 1246 (face (rainbow-delimiters-depth-1-face) fontified t) 1246 1247 (fontified t) 1247 1248 (fontified t)) #(";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Set up code completion with company and irony
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'company)
(require 'company-rtags)
(global-company-mode)

;; Enable semantics mode for auto-completion
(require 'cc-mode)
(require 'semantic)
(global-semanticdb-minor-mode 1)
(global-semantic-idle-scheduler-mode 1)
(semantic-mode 1)

;; Setup irony-mode to load in c-modes
(require 'irony)
(require 'company-irony-c-headers)
(require 'cl)
(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)
(add-hook 'objc-mode-hook 'irony-mode)

;; irony-mode hook that is called when irony is triggered
(defun my-irony-mode-hook ()
  \"Custom irony mode hook to remap keys.\"
  (define-key irony-mode-map [remap completion-at-point]
    'irony-completion-at-point-async)
  (define-key irony-mode-map [remap complete-symbol]
    'irony-completion-at-point-async))

" 0 70 (face font-lock-comment-delimiter-face fontified t) 70 71 (face font-lock-comment-face fontified t) 71 74 (face font-lock-comment-delimiter-face fontified t) 74 120 (face font-lock-comment-face fontified t) 120 130 (face font-lock-comment-delimiter-face fontified t) 130 190 (face font-lock-comment-delimiter-face fontified t) 190 191 (face font-lock-comment-face fontified t) 191 192 (face (rainbow-delimiters-depth-1-face) fontified t) 192 199 (face font-lock-keyword-face fontified t) 199 201 (fontified t) 201 208 (face font-lock-constant-face fontified t) 208 209 (face (rainbow-delimiters-depth-1-face) fontified t) 209 210 (fontified t) 210 211 (face (rainbow-delimiters-depth-1-face) fontified t) 211 218 (face font-lock-keyword-face fontified t) 218 220 (fontified t) 220 233 (face font-lock-constant-face fontified t) 233 234 (face (rainbow-delimiters-depth-1-face) fontified t) 234 235 (fontified t) 235 236 (face (rainbow-delimiters-depth-1-face) fontified t) 236 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-1-face) fontified t) 256 257 (fontified t) 257 258 (fontified t) 258 261 (face font-lock-comment-delimiter-face fontified t) 261 303 (face font-lock-comment-face fontified t) 303 304 (face (rainbow-delimiters-depth-1-face) fontified t) 304 311 (face font-lock-keyword-face fontified t) 311 313 (fontified t) 313 320 (face font-lock-constant-face fontified t) 320 321 (face (rainbow-delimiters-depth-1-face) fontified t) 321 322 (fontified t) 322 323 (face (rainbow-delimiters-depth-1-face) fontified t) 323 330 (face font-lock-keyword-face fontified t) 330 332 (fontified t) 332 340 (face font-lock-constant-face fontified t) 340 341 (face (rainbow-delimiters-depth-1-face) fontified t) 341 342 (fontified t) 342 343 (face (rainbow-delimiters-depth-1-face) fontified t) 343 373 (fontified t) 373 374 (face (rainbow-delimiters-depth-1-face) fontified t) 374 375 (fontified t) 375 376 (face (rainbow-delimiters-depth-1-face) fontified t) 376 413 (fontified t) 413 414 (face (rainbow-delimiters-depth-1-face) fontified t) 414 415 (fontified t) 415 416 (face (rainbow-delimiters-depth-1-face) fontified t) 416 431 (fontified t) 431 432 (face (rainbow-delimiters-depth-1-face) fontified t) 432 433 (fontified t) 433 434 (fontified t) 434 437 (face font-lock-comment-delimiter-face fontified t) 437 473 (face font-lock-comment-face fontified t) 473 474 (face (rainbow-delimiters-depth-1-face) fontified t) 474 481 (face font-lock-keyword-face fontified t) 481 483 (fontified t) 483 488 (face font-lock-constant-face fontified t) 488 489 (face (rainbow-delimiters-depth-1-face) fontified t) 489 490 (fontified t) 490 491 (face (rainbow-delimiters-depth-1-face) fontified t) 491 498 (face font-lock-keyword-face fontified t) 498 500 (fontified t) 500 523 (face font-lock-constant-face fontified t) 523 524 (face (rainbow-delimiters-depth-1-face) fontified t) 524 525 (fontified t) 525 526 (face (rainbow-delimiters-depth-1-face) fontified t) 526 533 (face font-lock-keyword-face fontified t) 533 535 (fontified t) 535 537 (face font-lock-constant-face fontified t) 537 538 (face (rainbow-delimiters-depth-1-face) fontified t) 538 539 (fontified t) 539 540 (face (rainbow-delimiters-depth-1-face) fontified t) 540 575 (fontified t) 575 576 (face (rainbow-delimiters-depth-1-face) fontified t) 576 577 (fontified t) 577 578 (face (rainbow-delimiters-depth-1-face) fontified t) 578 611 (fontified t) 611 612 (face (rainbow-delimiters-depth-1-face) fontified t) 612 613 (fontified t) 613 614 (face (rainbow-delimiters-depth-1-face) fontified t) 614 650 (fontified t) 650 651 (face (rainbow-delimiters-depth-1-face) fontified t) 651 652 (fontified t) 652 653 (fontified t) 653 656 (face font-lock-comment-delimiter-face fontified t) 656 691 (face font-lock-comment-face fontified t) 691 711 (face font-lock-comment-face fontified t) 711 712 (face (rainbow-delimiters-depth-1-face) fontified t) 712 717 (face font-lock-keyword-face fontified t) 717 718 (fontified t) 718 736 (face font-lock-function-name-face fontified t) 736 737 (fontified t) 737 738 (face (rainbow-delimiters-depth-2-face) fontified t) 738 739 (face (rainbow-delimiters-depth-2-face) fontified t) 739 740 (fontified t) 740 742 (fontified t) 742 781 (face font-lock-doc-face fontified t) 781 782 (fontified t) 782 784 (fontified t) 784 785 (face (rainbow-delimiters-depth-2-face) fontified t) 785 811 (fontified t) 811 812 (face (rainbow-delimiters-depth-3-face) fontified t) 812 837 (fontified t) 837 838 (face (rainbow-delimiters-depth-3-face) fontified t) 838 875 (fontified t) 875 876 (face (rainbow-delimiters-depth-2-face) fontified t) 876 877 (fontified t) 877 879 (fontified t) 879 880 (face (rainbow-delimiters-depth-2-face) fontified t) 880 906 (fontified t) 906 907 (face (rainbow-delimiters-depth-3-face) fontified t) 907 928 (fontified t) 928 929 (face (rainbow-delimiters-depth-3-face) fontified t) 929 930 (fontified t) 930 966 (fontified t) 966 967 (face (rainbow-delimiters-depth-2-face) fontified t) 967 968 (face (rainbow-delimiters-depth-1-face) fontified t) 968 970 (fontified t)) "testsimpleclip!" #(";; ensure that we use only rtags checking
;; https://github.com/Andersbakken/rtags#optional-1
(defun setup-flycheck-rtags ()
  (interactive)
  (flycheck-select-checker 'rtags)
  ;; RTags creates more accurate overlays.
  (setq-local flycheck-highlighting-mode nil)
  (setq-local flycheck-check-syntax-automatically nil))

;; only run this if rtags is installed
(when (require 'rtags nil :noerror)
  ;; make sure you have company-mode installed
  (require 'company)
  (define-key c-mode-base-map (kbd \"M-.\")
    (function rtags-find-symbol-at-point))
  (define-key c-mode-base-map (kbd \"M-,\")
    (function rtags-find-references-at-point))
  ;; disable prelude's use of C-c r, as this is the rtags keyboard prefix
  (define-key prelude-mode-map (kbd \"C-c r\") nil)
  ;; install standard rtags keybindings. Do M-. on the symbol below to
  ;; jump to definition and see the keybindings.
  (rtags-enable-standard-keybindings)
  ;; comment this out if you don't have or don't use helm
  (setq rtags-use-helm t)
  ;; company completion setup
  (setq rtags-autostart-diagnostics t)
  (rtags-diagnostics)
  (setq rtags-completions-enabled t)
  (push 'company-rtags company-backends)
  (global-company-mode)
  (define-key c-mode-base-map (kbd \"<C-tab>\") (function company-complete))
  ;; use rtags flycheck mode -- clang warnings shown inline
  (require 'flycheck-rtags)
  ;; c-mode-common-hook is also called by c++-mode
  (add-hook 'c-mode-common-hook #'setup-flycheck-rtags))
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 42 (fontified t face font-lock-comment-face) 42 45 (fontified t face font-lock-comment-delimiter-face) 45 94 (fontified t face font-lock-comment-face) 94 95 (fontified t face (rainbow-delimiters-depth-1-face)) 95 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t) 101 121 (fontified t face font-lock-function-name-face) 121 122 (fontified t) 122 123 (fontified t face (rainbow-delimiters-depth-2-face)) 123 124 (fontified t face (rainbow-delimiters-depth-2-face)) 124 125 (fontified t) 125 127 (fontified t) 127 128 (fontified t face (rainbow-delimiters-depth-2-face)) 128 139 (fontified t face font-lock-keyword-face) 139 140 (fontified t face (rainbow-delimiters-depth-2-face)) 140 143 (fontified t) 143 144 (fontified t face (rainbow-delimiters-depth-2-face)) 144 174 (fontified t) 174 175 (fontified t face (rainbow-delimiters-depth-2-face)) 175 176 (fontified t) 176 178 (fontified t) 178 181 (fontified t face font-lock-comment-delimiter-face) 181 219 (fontified t face font-lock-comment-face) 219 221 (fontified t) 221 222 (fontified t face (rainbow-delimiters-depth-2-face)) 222 232 (fontified t face font-lock-keyword-face) 232 263 (fontified t) 263 264 (fontified t face (rainbow-delimiters-depth-2-face)) 264 267 (fontified t) 267 268 (fontified t face (rainbow-delimiters-depth-2-face)) 268 278 (fontified t face font-lock-keyword-face) 278 318 (fontified t) 318 319 (fontified t face (rainbow-delimiters-depth-2-face)) 319 320 (fontified t face (rainbow-delimiters-depth-1-face)) 320 321 (fontified t) 321 322 (fontified t) 322 325 (fontified t face font-lock-comment-delimiter-face) 325 361 (fontified t face font-lock-comment-face) 361 362 (fontified t face (rainbow-delimiters-depth-1-face)) 362 366 (fontified t face font-lock-keyword-face) 366 367 (fontified t) 367 368 (fontified t face (rainbow-delimiters-depth-2-face)) 368 375 (fontified t face font-lock-keyword-face) 375 377 (fontified t) 377 382 (fontified t face font-lock-constant-face) 382 387 (fontified t) 387 395 (fontified t face font-lock-builtin-face) 395 396 (fontified t face (rainbow-delimiters-depth-2-face)) 396 399 (fontified t) 399 402 (fontified t face font-lock-comment-delimiter-face) 402 444 (fontified t face font-lock-comment-face) 444 446 (fontified t) 446 447 (fontified t face (rainbow-delimiters-depth-2-face)) 447 454 (fontified t face font-lock-keyword-face) 454 456 (fontified t) 456 463 (fontified t face font-lock-constant-face) 463 464 (fontified t face (rainbow-delimiters-depth-2-face)) 464 467 (fontified t) 467 468 (fontified t face (rainbow-delimiters-depth-2-face)) 468 495 (fontified t) 495 496 (fontified t face (rainbow-delimiters-depth-3-face)) 496 500 (fontified t) 500 505 (fontified t face font-lock-string-face) 505 506 (fontified t face (rainbow-delimiters-depth-3-face)) 506 511 (fontified t) 511 512 (fontified t face (rainbow-delimiters-depth-3-face)) 512 520 (fontified t face font-lock-keyword-face) 520 547 (fontified t) 547 548 (fontified t face (rainbow-delimiters-depth-3-face)) 548 549 (fontified t face (rainbow-delimiters-depth-2-face)) 549 552 (fontified t) 552 553 (fontified t face (rainbow-delimiters-depth-2-face)) 553 580 (fontified t) 580 581 (fontified t face (rainbow-delimiters-depth-3-face)) 581 585 (fontified t) 585 590 (fontified t face font-lock-string-face) 590 591 (fontified t face (rainbow-delimiters-depth-3-face)) 591 596 (fontified t) 596 597 (fontified t face (rainbow-delimiters-depth-3-face)) 597 605 (fontified t face font-lock-keyword-face) 605 636 (fontified t) 636 637 (fontified t face (rainbow-delimiters-depth-3-face)) 637 638 (fontified t face (rainbow-delimiters-depth-2-face)) 638 641 (fontified t) 641 644 (fontified t face font-lock-comment-delimiter-face) 644 713 (fontified t face font-lock-comment-face) 713 715 (fontified t) 715 716 (fontified t face (rainbow-delimiters-depth-2-face)) 716 744 (fontified t) 744 745 (fontified t face (rainbow-delimiters-depth-3-face)) 745 749 (fontified t) 749 756 (fontified t face font-lock-string-face) 756 757 (fontified t face (rainbow-delimiters-depth-3-face)) 757 761 (fontified t) 761 762 (fontified t face (rainbow-delimiters-depth-2-face)) 762 765 (fontified t) 765 768 (fontified t face font-lock-comment-delimiter-face) 768 822 (fontified t face font-lock-comment-face) 822 834 (fontified t face font-lock-comment-face) 834 836 (fontified t) 836 839 (fontified t face font-lock-comment-delimiter-face) 839 883 (fontified t face font-lock-comment-face) 883 885 (fontified t) 885 886 (fontified t face (rainbow-delimiters-depth-2-face)) 886 919 (fontified t) 919 920 (fontified t face (rainbow-delimiters-depth-2-face)) 920 923 (fontified t) 923 926 (fontified t face font-lock-comment-delimiter-face) 926 979 (fontified t face font-lock-comment-face) 979 981 (fontified t) 981 982 (fontified t face (rainbow-delimiters-depth-2-face)) 982 986 (fontified t face font-lock-keyword-face) 986 1003 (fontified t) 1003 1004 (fontified t face (rainbow-delimiters-depth-2-face)) 1004 1007 (fontified t) 1007 1010 (fontified t face font-lock-comment-delimiter-face) 1010 1035 (fontified t face font-lock-comment-face) 1035 1037 (fontified t) 1037 1038 (fontified t face (rainbow-delimiters-depth-2-face)) 1038 1042 (fontified t face font-lock-keyword-face) 1042 1072 (fontified t) 1072 1073 (fontified t face (rainbow-delimiters-depth-2-face)) 1073 1076 (fontified t) 1076 1077 (fontified t face (rainbow-delimiters-depth-2-face)) 1077 1094 (fontified t) 1094 1095 (fontified t face (rainbow-delimiters-depth-2-face)) 1095 1098 (fontified t) 1098 1099 (fontified t face (rainbow-delimiters-depth-2-face)) 1099 1103 (fontified t face font-lock-keyword-face) 1103 1131 (fontified t) 1131 1132 (fontified t face (rainbow-delimiters-depth-2-face)) 1132 1135 (fontified t) 1135 1136 (fontified t face (rainbow-delimiters-depth-2-face)) 1136 1140 (fontified t face font-lock-keyword-face) 1140 1172 (fontified t) 1172 1173 (fontified t face (rainbow-delimiters-depth-2-face)) 1173 1176 (fontified t) 1176 1177 (fontified t face (rainbow-delimiters-depth-2-face)) 1177 1196 (fontified t) 1196 1197 (fontified t face (rainbow-delimiters-depth-2-face)) 1197 1200 (fontified t) 1200 1201 (fontified t face (rainbow-delimiters-depth-2-face)) 1201 1228 (fontified t) 1228 1229 (fontified t face (rainbow-delimiters-depth-3-face)) 1229 1233 (fontified t) 1233 1242 (fontified t face font-lock-string-face) 1242 1243 (fontified t face (rainbow-delimiters-depth-3-face)) 1243 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-3-face)) 1245 1253 (fontified t face font-lock-keyword-face) 1253 1270 (fontified t) 1270 1271 (fontified t face (rainbow-delimiters-depth-3-face)) 1271 1272 (fontified t face (rainbow-delimiters-depth-2-face)) 1272 1273 (fontified t) 1273 1275 (fontified t) 1275 1278 (fontified t face font-lock-comment-delimiter-face) 1278 1333 (fontified t face font-lock-comment-face) 1333 1334 (fontified t) 1334 1335 (fontified t) 1335 1336 (fontified t face (rainbow-delimiters-depth-2-face)) 1336 1343 (fontified t face font-lock-keyword-face) 1343 1345 (fontified t) 1345 1359 (fontified t face font-lock-constant-face) 1359 1360 (fontified t face (rainbow-delimiters-depth-2-face)) 1360 1361 (fontified t) 1361 1363 (fontified t) 1363 1366 (fontified t face font-lock-comment-delimiter-face) 1366 1412 (fontified t face font-lock-comment-face) 1412 1414 (fontified t) 1414 1415 (fontified t face (rainbow-delimiters-depth-2-face)) 1415 1466 (fontified t) 1466 1467 (fontified t face (rainbow-delimiters-depth-2-face)) 1467 1468 (fontified t face (rainbow-delimiters-depth-1-face)) 1468 1469 (fontified t)) #(";; ensure that we use only rtags checking
;; https://github.com/Andersbakken/rtags#optional-1
(defun setup-flycheck-rtags ()
  (interactive)
  (flycheck-select-checker 'rtags)
  ;; RTags creates more accurate overlays.
  (setq-local flycheck-highlighting-mode nil)
  (setq-local flycheck-check-syntax-automatically nil))

;; only run this if rtags is installed
(when (require 'rtags nil :noerror)
  ;; make sure you have company-mode installed
  (require 'company)
  (define-key c-mode-base-map (kbd \"M-.\")
    (function rtags-find-symbol-at-point))
  (define-key c-mode-base-map (kbd \"M-,\")
    (function rtags-find-references-at-point))
  ;; disable prelude's use of C-c r, as this is the rtags keyboard prefix
  (define-key prelude-mode-map (kbd \"C-c r\") nil)
  ;; install standard rtags keybindings. Do M-. on the symbol below to
  ;; jump to definition and see the keybindings.
  (rtags-enable-standard-keybindings)
  ;; comment this out if you don't have or don't use helm
  (setq rtags-use-helm t)
  ;; company completion setup
  (setq rtags-autostart-diagnostics t)
  (rtags-diagnostics)
  (setq rtags-completions-enabled t)
  (push 'company-rtags company-backends)
  (global-company-mode)
  (define-key c-mode-base-map (kbd \"<C-tab>\") (function company-complete))
  ;; use rtags flycheck mode -- clang warnings shown inline
  (require 'flycheck-rtags)
  ;; c-mode-common-hook is also called by c++-mode
  (add-hook 'c-mode-common-hook #'setup-flycheck-rtags))
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 42 (fontified t face font-lock-comment-face) 42 45 (fontified t face font-lock-comment-delimiter-face) 45 94 (fontified t face font-lock-comment-face) 94 95 (fontified t face (rainbow-delimiters-depth-1-face)) 95 100 (fontified t face font-lock-keyword-face) 100 101 (fontified t) 101 121 (fontified t face font-lock-function-name-face) 121 122 (fontified t) 122 123 (fontified t face (rainbow-delimiters-depth-2-face)) 123 124 (fontified t face (rainbow-delimiters-depth-2-face)) 124 125 (fontified t) 125 127 (fontified t) 127 128 (fontified t face (rainbow-delimiters-depth-2-face)) 128 139 (fontified t face font-lock-keyword-face) 139 140 (fontified t face (rainbow-delimiters-depth-2-face)) 140 143 (fontified t) 143 144 (fontified t face (rainbow-delimiters-depth-2-face)) 144 174 (fontified t) 174 175 (fontified t face (rainbow-delimiters-depth-2-face)) 175 176 (fontified t) 176 178 (fontified t) 178 181 (fontified t face font-lock-comment-delimiter-face) 181 219 (fontified t face font-lock-comment-face) 219 221 (fontified t) 221 222 (fontified t face (rainbow-delimiters-depth-2-face)) 222 232 (fontified t face font-lock-keyword-face) 232 263 (fontified t) 263 264 (fontified t face (rainbow-delimiters-depth-2-face)) 264 267 (fontified t) 267 268 (fontified t face (rainbow-delimiters-depth-2-face)) 268 278 (fontified t face font-lock-keyword-face) 278 318 (fontified t) 318 319 (fontified t face (rainbow-delimiters-depth-2-face)) 319 320 (fontified t face (rainbow-delimiters-depth-1-face)) 320 321 (fontified t) 321 322 (fontified t) 322 325 (fontified t face font-lock-comment-delimiter-face) 325 361 (fontified t face font-lock-comment-face) 361 362 (fontified t face (rainbow-delimiters-depth-1-face)) 362 366 (fontified t face font-lock-keyword-face) 366 367 (fontified t) 367 368 (fontified t face (rainbow-delimiters-depth-2-face)) 368 375 (fontified t face font-lock-keyword-face) 375 377 (fontified t) 377 382 (fontified t face font-lock-constant-face) 382 387 (fontified t) 387 395 (fontified t face font-lock-builtin-face) 395 396 (fontified t face (rainbow-delimiters-depth-2-face)) 396 399 (fontified t) 399 402 (fontified t face font-lock-comment-delimiter-face) 402 444 (fontified t face font-lock-comment-face) 444 446 (fontified t) 446 447 (fontified t face (rainbow-delimiters-depth-2-face)) 447 454 (fontified t face font-lock-keyword-face) 454 456 (fontified t) 456 463 (fontified t face font-lock-constant-face) 463 464 (fontified t face (rainbow-delimiters-depth-2-face)) 464 467 (fontified t) 467 468 (fontified t face (rainbow-delimiters-depth-2-face)) 468 495 (fontified t) 495 496 (fontified t face (rainbow-delimiters-depth-3-face)) 496 500 (fontified t) 500 505 (fontified t face font-lock-string-face) 505 506 (fontified t face (rainbow-delimiters-depth-3-face)) 506 511 (fontified t) 511 512 (fontified t face (rainbow-delimiters-depth-3-face)) 512 520 (fontified t face font-lock-keyword-face) 520 547 (fontified t) 547 548 (fontified t face (rainbow-delimiters-depth-3-face)) 548 549 (fontified t face (rainbow-delimiters-depth-2-face)) 549 552 (fontified t) 552 553 (fontified t face (rainbow-delimiters-depth-2-face)) 553 580 (fontified t) 580 581 (fontified t face (rainbow-delimiters-depth-3-face)) 581 585 (fontified t) 585 590 (fontified t face font-lock-string-face) 590 591 (fontified t face (rainbow-delimiters-depth-3-face)) 591 596 (fontified t) 596 597 (fontified t face (rainbow-delimiters-depth-3-face)) 597 605 (fontified t face font-lock-keyword-face) 605 636 (fontified t) 636 637 (fontified t face (rainbow-delimiters-depth-3-face)) 637 638 (fontified t face (rainbow-delimiters-depth-2-face)) 638 641 (fontified t) 641 644 (fontified t face font-lock-comment-delimiter-face) 644 713 (fontified t face font-lock-comment-face) 713 715 (fontified t) 715 716 (fontified t face (rainbow-delimiters-depth-2-face)) 716 744 (fontified t) 744 745 (fontified t face (rainbow-delimiters-depth-3-face)) 745 749 (fontified t) 749 756 (fontified t face font-lock-string-face) 756 757 (fontified t face (rainbow-delimiters-depth-3-face)) 757 761 (fontified t) 761 762 (fontified t face (rainbow-delimiters-depth-2-face)) 762 765 (fontified t) 765 768 (fontified t face font-lock-comment-delimiter-face) 768 822 (fontified t face font-lock-comment-face) 822 834 (fontified t face font-lock-comment-face) 834 836 (fontified t) 836 839 (fontified t face font-lock-comment-delimiter-face) 839 883 (fontified t face font-lock-comment-face) 883 885 (fontified t) 885 886 (fontified t face (rainbow-delimiters-depth-2-face)) 886 919 (fontified t) 919 920 (fontified t face (rainbow-delimiters-depth-2-face)) 920 923 (fontified t) 923 926 (fontified t face font-lock-comment-delimiter-face) 926 979 (fontified t face font-lock-comment-face) 979 981 (fontified t) 981 982 (fontified t face (rainbow-delimiters-depth-2-face)) 982 986 (fontified t face font-lock-keyword-face) 986 1003 (fontified t) 1003 1004 (fontified t face (rainbow-delimiters-depth-2-face)) 1004 1007 (fontified t) 1007 1010 (fontified t face font-lock-comment-delimiter-face) 1010 1035 (fontified t face font-lock-comment-face) 1035 1037 (fontified t) 1037 1038 (fontified t face (rainbow-delimiters-depth-2-face)) 1038 1042 (fontified t face font-lock-keyword-face) 1042 1072 (fontified t) 1072 1073 (fontified t face (rainbow-delimiters-depth-2-face)) 1073 1076 (fontified t) 1076 1077 (fontified t face (rainbow-delimiters-depth-2-face)) 1077 1094 (fontified t) 1094 1095 (fontified t face (rainbow-delimiters-depth-2-face)) 1095 1098 (fontified t) 1098 1099 (fontified t face (rainbow-delimiters-depth-2-face)) 1099 1103 (fontified t face font-lock-keyword-face) 1103 1131 (fontified t) 1131 1132 (fontified t face (rainbow-delimiters-depth-2-face)) 1132 1135 (fontified t) 1135 1136 (fontified t face (rainbow-delimiters-depth-2-face)) 1136 1140 (fontified t face font-lock-keyword-face) 1140 1172 (fontified t) 1172 1173 (fontified t face (rainbow-delimiters-depth-2-face)) 1173 1176 (fontified t) 1176 1177 (fontified t face (rainbow-delimiters-depth-2-face)) 1177 1196 (fontified t) 1196 1197 (fontified t face (rainbow-delimiters-depth-2-face)) 1197 1200 (fontified t) 1200 1201 (fontified t face (rainbow-delimiters-depth-2-face)) 1201 1228 (fontified t) 1228 1229 (fontified t face (rainbow-delimiters-depth-3-face)) 1229 1233 (fontified t) 1233 1242 (fontified t face font-lock-string-face) 1242 1243 (fontified t face (rainbow-delimiters-depth-3-face)) 1243 1244 (fontified t) 1244 1245 (fontified t face (rainbow-delimiters-depth-3-face)) 1245 1253 (fontified t face font-lock-keyword-face) 1253 1270 (fontified t) 1270 1271 (fontified t face (rainbow-delimiters-depth-3-face)) 1271 1272 (fontified t face (rainbow-delimiters-depth-2-face)) 1272 1273 (fontified t) 1273 1275 (fontified t) 1275 1278 (fontified t face font-lock-comment-delimiter-face) 1278 1333 (fontified t face font-lock-comment-face) 1333 1334 (fontified t) 1334 1335 (fontified t) 1335 1336 (fontified t face (rainbow-delimiters-depth-2-face)) 1336 1343 (fontified t face font-lock-keyword-face) 1343 1345 (fontified t) 1345 1359 (fontified t face font-lock-constant-face) 1359 1360 (fontified t face (rainbow-delimiters-depth-2-face)) 1360 1361 (fontified t) 1361 1363 (fontified t) 1363 1366 (fontified t face font-lock-comment-delimiter-face) 1366 1412 (fontified t face font-lock-comment-face) 1412 1414 (fontified t) 1414 1415 (fontified t face (rainbow-delimiters-depth-2-face)) 1415 1466 (fontified t) 1466 1467 (fontified t face (rainbow-delimiters-depth-2-face)) 1467 1468 (fontified t face (rainbow-delimiters-depth-1-face)) 1468 1469 (fontified t)) #("prelude-mode-map" 0 16 (fontified t)) #("prelude-mode-map" 0 16 (fontified t)) "Symbol's value as variable is void: prelude-mode-map" "testsimpleclip!" ";; ensure that we use only rtags checking
;; https://github.com/Andersbakken/rtags#optional-1
(defun setup-flycheck-rtags ()
  (interactive)
  (flycheck-select-checker 'rtags)
  ;; RTags creates more accurate overlays.
  (setq-local flycheck-highlighting-mode nil)
  (setq-local flycheck-check-syntax-automatically nil))

;; only run this if rtags is installed
(when (require 'rtags nil :noerror)
  ;; make sure you have company-mode installed
  (require 'company)
  (define-key c-mode-base-map (kbd \"M-.\")
    (function rtags-find-symbol-at-point))
  (define-key c-mode-base-map (kbd \"M-,\")
    (function rtags-find-references-at-point))
  ;; disable prelude's use of C-c r, as this is the rtags keyboard prefix
  (define-key prelude-mode-map (kbd \"C-c r\") nil)
  ;; install standard rtags keybindings. Do M-. on the symbol below to
  ;; jump to definition and see the keybindings.
  (rtags-enable-standard-keybindings)
  ;; comment this out if you don't have or don't use helm
  (setq rtags-use-helm t)
  ;; company completion setup
  (setq rtags-autostart-diagnostics t)
  (rtags-diagnostics)
  (setq rtags-completions-enabled t)
  (push 'company-rtags company-backends)
  (global-company-mode)
  (define-key c-mode-base-map (kbd \"<C-tab>\") (function company-complete))
  ;; use rtags flycheck mode -- clang warnings shown inline
  (require 'flycheck-rtags)
  ;; c-mode-common-hook is also called by c++-mode
  (add-hook 'c-mode-common-hook #'setup-flycheck-rtags))" ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Set up code completion with company and irony
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'company)
(require 'company-rtags)
(global-company-mode)

;; Enable semantics mode for auto-completion
(require 'cc-mode)
(require 'semantic)
(global-semanticdb-minor-mode 1)
(global-semantic-idle-scheduler-mode 1)
(semantic-mode 1)

;; Setup irony-mode to load in c-modes
(require 'irony)
(require 'company-irony-c-headers)
(require 'cl)
(add-hook 'c++-mode-hook 'irony-mode)
(add-hook 'c-mode-hook 'irony-mode)
(add-hook 'objc-mode-hook 'irony-mode)

;; irony-mode hook that is called when irony is triggered
(defun my-irony-mode-hook ()
  \"Custom irony mode hook to remap keys.\"
  (define-key irony-mode-map [remap completion-at-point]
    'irony-completion-at-point-async)
  (define-key irony-mode-map [remap complete-symbol]
    'irony-completion-at-point-async))

(add-hook 'irony-mode-hook 'my-irony-mode-hook)
(add-hook 'irony-mode-hook 'irony-cdb-autosetup-compile-options)

;; company-irony setup, c-header completions
(add-hook 'irony-mode-hook 'company-irony-setup-begin-commands)
;; Remove company-semantic because it has higher precedance than company-clang
;; Using RTags completion is also faster than semantic, it seems. Semantic
;; also provides a bunch of technically irrelevant completions sometimes.
;; All in all, RTags just seems to do a better job.
(setq company-backends (delete 'company-semantic company-backends))
;; Enable company-irony and several other useful auto-completion modes
;; We don't use rtags since we've found that for large projects this can cause
;; async timeouts. company-semantic (after company-clang!) works quite well
;; but some knowledge some knowledge of when best to trigger is still necessary.
(eval-after-load 'company
  '(add-to-list
    'company-backends '(company-irony-c-headers
                        company-irony company-yasnippet
                        company-clang company-rtags)
    )
  )

(defun my-disable-semantic ()
  \"Disable the company-semantic backend.\"
  (interactive)
  (setq company-backends (delete '(company-irony-c-headers
                                   company-irony company-yasnippet
                                   company-clang company-rtags
                                   company-semantic) company-backends))
  (add-to-list
   'company-backends '(company-irony-c-headers
                       company-irony company-yasnippet
                       company-clang company-rtags))
  )
(defun my-enable-semantic ()
  \"Enable the company-semantic backend.\"
  (interactive)
  (setq company-backends (delete '(company-irony-c-headers
                                   company-irony company-yasnippet
                                   company-clang) company-backends))
  (add-to-list
   'company-backends '(company-irony-c-headers
                       company-irony company-yasnippet company-clang))
  )

;; Zero delay when pressing tab
(setq company-idle-delay 0)
(define-key c-mode-map [(tab)] 'company-complete)
(define-key c++-mode-map [(tab)] 'company-complete)
;; Delay when idle because I want to be able to think
(setq company-idle-delay 0.2)

;; Prohibit semantic from searching through system headers. We want
;; company-clang to do that for us.
(setq-mode-local c-mode semanticdb-find-default-throttle
                 '(local project unloaded recursive))
(setq-mode-local c++-mode semanticdb-find-default-throttle
                 '(local project unloaded recursive))

(semantic-remove-system-include \"/usr/include/\" 'c++-mode)
(semantic-remove-system-include \"/usr/local/include/\" 'c++-mode)
(add-hook 'semantic-init-hooks
          'semantic-reset-system-include)
" #("setup)

;; clang-format can be triggered using C-M-tab" 0 5 (fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 8 (fontified t) 8 11 (face font-lock-comment-delimiter-face fontified t) 11 17 (fontified t face font-lock-comment-face) 17 24 (face font-lock-comment-face fontified t) 24 28 (fontified t face font-lock-comment-face) 28 31 (face font-lock-comment-face fontified t) 31 41 (fontified t face font-lock-comment-face) 41 47 (face font-lock-comment-face fontified t) 47 49 (fontified t face font-lock-comment-face) 49 51 (face font-lock-comment-face fontified t) 51 54 (face font-lock-comment-face fontified t)) #("require 'clang-format)
(global-set-key [C-M-tab] 'clang-format-region)" 0 7 (face font-lock-keyword-face fontified t) 7 9 (fontified t) 9 15 (fontified t face font-lock-constant-face) 15 21 (face font-lock-constant-face fontified t) 21 22 (face (rainbow-delimiters-depth-1-face) fontified t) 22 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-1-face) fontified t) 24 31 (fontified t) 31 35 (fontified t) 35 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-2-face)) 40 42 (fontified t) 42 44 (fontified t) 44 47 (fontified t) 47 48 (face (rainbow-delimiters-depth-2-face) fontified t) 48 50 (fontified t) 50 56 (fontified t) 56 60 (fontified t) 60 63 (fontified t) 63 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-1-face) fontified t)) "testsimpleclip!" ";; clang-format can be triggered using C-M-tab
(require 'clang-format)
(global-set-key [C-M-tab] 'clang-format-region)" "(defun my-flycheck-rtags-setup ()
  (flycheck-select-checker 'rtags)
  (setq-local flycheck-highlighting-mode nil) ;; RTags creates more accurate overlays.
  (setq-local flycheck-check-syntax-automatically nil))
(add-hook 'c-mode-hook #'my-flycheck-rtags-setup)
(add-hook 'c++-mode-hook #'my-flycheck-rtags-setup)
(add-hook 'objc-mode-hook #'my-flycheck-rtags-setup)" "(require 'flycheck-rtags)" "(global-company-mode)" "(setq rtags-completions-enabled t)" "(setq rtags-autostart-diagnostics t)" #("require 'cmake-ide)
(cmake-ide-setup)
;; Set cmake-ide-flags-c++ to use C++11
(setq cmake-ide-flags-c++ (append '(\"-std=c++11\")))
;; We want to be able to compile with a keyboard shortcut
(global-set-key (kbd \"C-c m\") 'cmake-ide-compile)

;; Set rtags to enable completions and use the standard keybindings.
;; A list of the keybindings can be found at:
;; http://syamajala.github.io/c-ide.html
(setq rtags-autostart-diagnostics t)
(rtags-diagnostics)
(setq rtags-completions-enabled t)
(rtags-enable-standard-keybindings)" 0 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t) 9 18 (fontified t face font-lock-constant-face) 18 19 (fontified t face (rainbow-delimiters-depth-1-face)) 19 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-1-face)) 37 38 (fontified t) 38 41 (fontified t face font-lock-comment-delimiter-face) 41 78 (fontified t face font-lock-comment-face) 78 79 (fontified t face (rainbow-delimiters-depth-1-face)) 79 83 (fontified t face font-lock-keyword-face) 83 102 (fontified t) 102 104 (fontified t) 104 105 (fontified t face (rainbow-delimiters-depth-2-face)) 105 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-3-face)) 114 126 (fontified t face font-lock-string-face) 126 127 (fontified t face (rainbow-delimiters-depth-3-face)) 127 128 (fontified t face (rainbow-delimiters-depth-2-face)) 128 129 (fontified t face (rainbow-delimiters-depth-1-face)) 129 130 (fontified t) 130 133 (fontified t face font-lock-comment-delimiter-face) 133 188 (fontified t face font-lock-comment-face) 188 189 (fontified t face (rainbow-delimiters-depth-1-face)) 189 204 (fontified t) 204 205 (fontified t face (rainbow-delimiters-depth-2-face)) 205 209 (fontified t) 209 216 (fontified t face font-lock-string-face) 216 217 (fontified t face (rainbow-delimiters-depth-2-face)) 217 228 (fontified t) 228 236 (fontified t) 236 237 (fontified t face (rainbow-delimiters-depth-1-face)) 237 238 (fontified t) 238 239 (fontified t) 239 242 (fontified t face font-lock-comment-delimiter-face) 242 308 (fontified t face font-lock-comment-face) 308 311 (fontified t face font-lock-comment-delimiter-face) 311 354 (fontified t face font-lock-comment-face) 354 357 (fontified t face font-lock-comment-delimiter-face) 357 395 (fontified t face font-lock-comment-face) 395 396 (fontified t face (rainbow-delimiters-depth-1-face)) 396 400 (fontified t face font-lock-keyword-face) 400 409 (fontified t) 409 430 (fontified t) 430 431 (fontified t face (rainbow-delimiters-depth-1-face)) 431 432 (fontified t) 432 433 (fontified t face (rainbow-delimiters-depth-1-face)) 433 450 (fontified t) 450 451 (fontified t face (rainbow-delimiters-depth-1-face)) 451 452 (fontified t) 452 453 (fontified t face (rainbow-delimiters-depth-1-face)) 453 457 (fontified t face font-lock-keyword-face) 457 485 (fontified t) 485 486 (fontified t face (rainbow-delimiters-depth-1-face)) 486 487 (fontified t) 487 488 (fontified t face (rainbow-delimiters-depth-1-face)) 488 521 (fontified t) 521 522 (fontified t face (rainbow-delimiters-depth-1-face))) "testsimpleclip!" ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Setup cmake-ide
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'cmake-ide)
(cmake-ide-setup)
;; Set cmake-ide-flags-c++ to use C++11
(setq cmake-ide-flags-c++ (append '(\"-std=c++11\")))
;; We want to be able to compile with a keyboard shortcut
(global-set-key (kbd \"C-c m\") 'cmake-ide-compile)

;; Set rtags to enable completions and use the standard keybindings.
;; A list of the keybindings can be found at:
;; http://syamajala.github.io/c-ide.html
(setq rtags-autostart-diagnostics t)
(rtags-diagnostics)
(setq rtags-completions-enabled t)
(rtags-enable-standard-keybindings)" #("add-hook 'after-init-hook 'global-company-mode)
(setq company-backends (delete 'company-semantic company-backends))
(define-key c-mode-map  [(tab)] 'company-complete)
(define-key c++-mode-map  [(tab)] 'company-co" 0 4 (fontified t) 4 10 (fontified t) 10 16 (fontified t) 16 21 (fontified t) 21 27 (fontified t) 27 34 (fontified t) 34 42 (fontified t) 42 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-1-face)) 47 48 (fontified t) 48 49 (fontified t face (rainbow-delimiters-depth-1-face)) 49 53 (face font-lock-keyword-face fontified t) 53 54 (fontified t) 54 62 (fontified t) 62 71 (fontified t) 71 72 (face (rainbow-delimiters-depth-2-face) fontified t) 72 80 (fontified t) 80 88 (fontified t) 88 97 (fontified t) 97 105 (fontified t) 105 113 (fontified t) 113 114 (fontified t face (rainbow-delimiters-depth-2-face)) 114 115 (fontified t face (rainbow-delimiters-depth-1-face)) 115 116 (fontified t) 116 117 (fontified t face (rainbow-delimiters-depth-1-face)) 117 124 (fontified t) 124 128 (fontified t) 128 130 (fontified t) 130 135 (fontified t) 135 140 (fontified t) 140 141 (face (rainbow-delimiters-depth-2-face) fontified t) 141 142 (face (rainbow-delimiters-depth-3-face) fontified t) 142 145 (fontified t) 145 146 (fontified t face (rainbow-delimiters-depth-3-face)) 146 147 (fontified t face (rainbow-delimiters-depth-2-face)) 147 149 (fontified t) 149 157 (fontified t) 157 165 (fontified t) 165 166 (fontified t face (rainbow-delimiters-depth-1-face)) 166 167 (fontified t) 167 168 (fontified t face (rainbow-delimiters-depth-1-face)) 168 175 (fontified t) 175 179 (fontified t) 179 183 (fontified t) 183 188 (fontified t) 188 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-2-face) fontified t) 194 195 (face (rainbow-delimiters-depth-3-face) fontified t) 195 198 (fontified t) 198 199 (fontified t face (rainbow-delimiters-depth-3-face)) 199 200 (fontified t face (rainbow-delimiters-depth-2-face)) 200 202 (fontified t) 202 210 (fontified t) 210 212 (fontified t)) ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Setup cmake-ide
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'cmake-ide)
(cmake-ide-setup)
;; Set cmake-ide-flags-c++ to use C++11
(setq cmake-ide-flags-c++ (append '(\"-std=c++11\")))
;; We want to be able to compile with a keyboard shortcut
(global-set-key (kbd \"C-c m\") 'cmake-ide-compile)

;; Set rtags to enable completions and use the standard keybindings.
;; A list of the keybindings can be found at:
;; http://syamajala.github.io/c-ide.html
(setq rtags-autostart-diagnostics t)
(rtags-diagnostics)
(setq rtags-completions-enabled t)
(rtags-enable-standard-keybindings)" #("2c94f4" 0 6 (fontified t face font-lock-string-face)) "testsimpleclip!" "DodgerBlue2" #("4a4e4f" 0 6 (face font-lock-string-face fontified t)) #("4a4e4f" 0 6 (face font-lock-string-face fontified t)) #("CadetBlue1" 0 10 (face font-lock-comment-face fontified t)) #("CadetBlue1" 0 10 (face font-lock-comment-face fontified t)) #("moccasin" 0 8 (face font-lock-string-face fontified t))))
